Author of Code Review:                           Youssef Moosa
Date of Code Review:                             3/6/2020
Sprint #:                                        3
Name of .cs File Being Reviewed:                 Door.cs
Author of the .cs File Being Reviewed:           Stephen Hogg

Specific comments on code quality:

* Consider having a DoorBehaviour class with method InteractWithObject(GameObject o)
  which could, perhaps, return a boolean if interaction was successful (i.e. Door was exploded,
  Door got unlocked, etc.), and TransitionDoor() returning the next type of door to take its place
  (i.e., if KeyDoorBehaviour is unlocked, becomes NormalDoorBehaviour and if DestroyableDoorBehaviour
  gets destroyed, DestroyedDoorBehaviour takes its place) or something similar to that end. 
  This would take advantage of the strategy pattern and better allow dynamically changing the 
  behavior of the door at runtime and in a cleaner fashion than checking some booleans to define behavior.

  ** To change this might require the door to identify specific types of objects using the
     is operator (i.e., NormalDoorBehaviour might have "o is Link" be the cue for successful
     behaviour, DestroyableDoorBehaviour "o is BombItem", or something to that end).

* Having the Door class be responsible for Game.KeyCounter by directly accessing it
  seems to overload the Door class responsibilities a little bit. It's fine for this
  sprint, but when we implement an inventory in the future, it might be better
  to pass in the inventory and have UnlockDoor take a key from the inventory
  if it works.

* PlaceLink seems to overload Door class too. Again, fine for this sprint,
  but once we get transitioning between rooms down and whatnot, there's probably
  a better way to handle transitioning Link, too.
